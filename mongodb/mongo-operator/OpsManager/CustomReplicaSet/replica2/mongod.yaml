apiVersion: v1
kind: Pod
metadata:
  name: replica2
  labels:
    app: replica2
spec:
  initContainers:
    - name: install-ops-agent
      image: ubuntu
      env:
        - name: OPS-MANAGER-IP
          value: "10.244.1.3"
        - name: AGENT-IMAGE
          value: "mongodb-mms-automation-agent-manager_11.0.5.6967-1_amd64.ubuntu1604.deb"
      command:
        - sh
        - -c
        - "apt update && apt install curl -y && curl -OL http://$(OPS-MANAGER-IP):8080/download/agent/automation/$(AGENT-IMAGE) && dpkg -i $(AGENT-IMAGE)" # && service mongodb-mms-automation-agent.service start"
      volumeMounts:
        - name: "mongo-data-dir"
          mountPath: "/data"
        - name: opt
          mountPath: "/opt"

  containers:
    - name: ops-agent
      image: ubuntu
      #command: ["/bin/sleep", "3650d"]
      command:
        - sh
        - -c
        - "/opt/mongodb-mms-automation/bin/mongodb-mms-automation-agent -f /etc/mongodb-mms/automation-agent.config"
      volumeMounts:
        - name: "mongo-data-dir"
          mountPath: "/data"
        - name: automation-agent
          mountPath: "/etc/mongodb-mms"
          readOnly: false
        - name: opt
          mountPath: "/opt"

    - image: mongo
      name: mongo

      #args: ["--dbpath","/data/db"]
      args: ["--config","/conf/config.yaml"]
      livenessProbe:
        exec:
          command:
            - mongo
            - --disableImplicitSessions
            - --port
            - "27002"
            - --eval
            - "db.adminCommand('ping')"
        initialDelaySeconds: 30
        periodSeconds: 10
        timeoutSeconds: 5
        successThreshold: 1
        failureThreshold: 6
      readinessProbe:
        exec:
          command:
            - mongo
            - --disableImplicitSessions
            - --port
            - "27002"
            - --eval
            - "db.adminCommand('ping')"
        initialDelaySeconds: 30
        periodSeconds: 10
        timeoutSeconds: 5
        successThreshold: 1
        failureThreshold: 6
      volumeMounts:
        - name: "mongo-data-dir"
          mountPath: "/data/db"
        - name: "mongo-logs-dir"
          mountPath: "/logs"
        - name: conf
          mountPath: "/conf"
        - name: automation-agent
          mountPath: "/etc/mongodb-mms"
        - name: opt
          mountPath: "/opt"
#        - name: keyfile
#          mountPath: "/etc/security"
         # readOnly: true
#      env:
#        - name: MONGO_INITDB_ROOT_USERNAME
#          valueFrom:
#            secretKeyRef:
#              name: mongo-creds
#              key: username
#        - name: MONGO_INITDB_ROOT_PASSWORD
#          valueFrom:
#            secretKeyRef:
#              name: mongo-creds
#              key: password
  nodeSelector:
    replica: replica2
  volumes:
    - name: opt
      emptyDir: { }
    - name: "mongo-data-dir"
      persistentVolumeClaim:
        claimName: "replica2-data"
    - name: "mongo-logs-dir"
      persistentVolumeClaim:
        claimName: "replica2-logs"
 #       readOnly: false
    - name: conf
      configMap:
        name: replica2-config
        items:
          - key: config.yaml
            path: config.yaml
    - name: automation-agent
      configMap:
        name: automation-agent
        items:
          - key: automation-agent.config
            path: automation-agent.config
#    - name: keyfile
#      configMap:
#        name: keyfile
#        #defaultMode: 0400
#        items:
#          - key: keyfile
#            path: keyfile